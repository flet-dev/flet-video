{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Getting Started","text":""},{"location":"#flet-video","title":"flet-video","text":"<p>A cross-platform video player for Flet apps.</p> <p>It is based on the media_kit Flutter package.</p>"},{"location":"#platform-support","title":"Platform Support","text":"<p>This package supports the following platforms:</p> Platform Supported Windows \u2705 macOS \u2705 Linux \u2705 iOS \u2705 Android \u2705 Web \u2705"},{"location":"#usage","title":"Usage","text":""},{"location":"#installation","title":"Installation","text":"<p>To install the <code>flet-video</code> package and add it to your project dependencies:</p> uvpippoetry <pre><code>uv add flet-video\n</code></pre> <pre><code>pip install flet-video  # (1)!\n</code></pre> <ol> <li>After this, you will have to manually add this package to your <code>requirements.txt</code> or <code>pyproject.toml</code>.</li> </ol> <pre><code>poetry add flet-video\n</code></pre> Windows Subsystem for Linux (WSL) <p>On WSL, you need to additionally install the <code>libmpv</code> library.</p> <p>If you receive <code>error while loading shared libraries: libmpv.so.1: cannot open shared object file: No such file or directory</code>, it means <code>libmpv</code> library is not installed in your WSL environment.</p> <p>To install it, run the following commands:</p> <pre><code>sudo apt update\nsudo apt install libmpv-dev libmpv2\nsudo ln -s /usr/lib/x86_64-linux-gnu/libmpv.so /usr/lib/libmpv.so.1\n</code></pre>"},{"location":"#examples","title":"Examples","text":"<p>See these.</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#changelog","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog and this project adheres to Semantic Versioning.</p>"},{"location":"changelog/#020-2025-06-26","title":"0.2.0 - 2025-06-26","text":""},{"location":"changelog/#added","title":"Added","text":"<ul> <li>Deployed online documentation: https://flet-dev.github.io/flet-video/</li> <li><code>Video</code> new property: <code>subtitle_track</code></li> <li><code>VideoConfiguration</code> new properties: <code>width</code>, <code>height</code>, <code>scale</code></li> </ul>"},{"location":"changelog/#changed","title":"Changed","text":"<ul> <li>Refactored <code>Video</code> control to use <code>@flet.control</code> dataclass-style definition.</li> <li>Renamed <code>Video</code> event handler properties:<ul> <li><code>on_loaded</code> \u2192 <code>on_load</code></li> <li><code>on_completed</code> \u2192 <code>on_complete</code></li> <li><code>on_track_changed</code> \u2192 <code>on_track_change</code></li> </ul> </li> </ul>"},{"location":"changelog/#010-2025-01-15","title":"0.1.0 - 2025-01-15","text":"<p>Initial release.</p>"},{"location":"license/","title":"License","text":"<pre><code>                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n</code></pre>"},{"location":"video/","title":"Video","text":""},{"location":"video/#examples","title":"Examples","text":""},{"location":"video/#example-1","title":"Example 1","text":"example_1.py<pre><code>import random\n\nimport flet as ft\n\nimport flet_video as ftv\n\n\ndef main(page: ft.Page):\n    page.theme_mode = ft.ThemeMode.LIGHT\n    page.title = \"TheEthicalVideo\"\n    page.window.always_on_top = True\n    page.spacing = 20\n    page.horizontal_alignment = ft.CrossAxisAlignment.CENTER\n\n    def handle_pause(e):\n        video.pause()\n        print(\"Video.pause()\")\n\n    def handle_play_or_pause(e):\n        video.play_or_pause()\n        print(\"Video.play_or_pause()\")\n\n    def handle_play(e):\n        video.play()\n        print(\"Video.play()\")\n\n    def handle_stop(e):\n        video.stop()\n        print(\"Video.stop()\")\n\n    def handle_next(e):\n        video.next()\n        print(\"Video.next()\")\n\n    def handle_previous(e):\n        video.previous()\n        print(\"Video.previous()\")\n\n    def handle_volume_change(e):\n        video.volume = e.control.value\n        page.update()\n        print(f\"Video.volume = {e.control.value}\")\n\n    def handle_playback_rate_change(e):\n        video.playback_rate = e.control.value\n        page.update()\n        print(f\"Video.playback_rate = {e.control.value}\")\n\n    def handle_seek(e):\n        video.seek(10000)\n        print(\"Video.seek(10000)\")\n\n    def handle_add_media(e):\n        video.playlist_add(random.choice(sample_media))\n        print(\"Video.playlist_add(random.choice(sample_media))\")\n\n    def handle_remove_media(e):\n        r = random.randint(0, len(video.playlist) - 1)\n        video.playlist_remove(r)\n        print(f\"Popped Item at index: {r} (position {r + 1})\")\n\n    def handle_jump(e):\n        print(\"Video.jump_to(0)\")\n        video.jump_to(0)\n\n    sample_media = [\n        ftv.VideoMedia(\n            \"https://user-images.githubusercontent.com/28951144/229373720-14d69157-1a56-4a78-a2f4-d7a134d7c3e9.mp4\"\n        ),\n        ftv.VideoMedia(\n            \"https://user-images.githubusercontent.com/28951144/229373718-86ce5e1d-d195-45d5-baa6-ef94041d0b90.mp4\"\n        ),\n        ftv.VideoMedia(\n            \"https://user-images.githubusercontent.com/28951144/229373716-76da0a4e-225a-44e4-9ee7-3e9006dbc3e3.mp4\"\n        ),\n        ftv.VideoMedia(\n            \"https://user-images.githubusercontent.com/28951144/229373695-22f88f13-d18f-4288-9bf1-c3e078d83722.mp4\"\n        ),\n        ftv.VideoMedia(\n            \"https://user-images.githubusercontent.com/28951144/229373709-603a7a89-2105-4e1b-a5a5-a6c3567c9a59.mp4\",\n            extras={\n                \"artist\": \"Thousand Foot Krutch\",\n                \"album\": \"The End Is Where We Begin\",\n            },\n            http_headers={\n                \"Foo\": \"Bar\",\n                \"Accept\": \"*/*\",\n            },\n        ),\n    ]\n\n    page.add(\n        video := ftv.Video(\n            expand=True,\n            playlist=sample_media[0:2],\n            playlist_mode=ftv.PlaylistMode.LOOP,\n            fill_color=ft.Colors.BLUE_400,\n            aspect_ratio=16 / 9,\n            volume=100,\n            autoplay=False,\n            filter_quality=ft.FilterQuality.HIGH,\n            muted=False,\n            on_load=lambda e: print(\"Video loaded successfully!\"),\n            on_enter_fullscreen=lambda e: print(\"Video entered fullscreen!\"),\n            on_exit_fullscreen=lambda e: print(\"Video exited fullscreen!\"),\n        ),\n        ft.Row(\n            wrap=True,\n            alignment=ft.MainAxisAlignment.CENTER,\n            controls=[\n                ft.ElevatedButton(\"Play\", on_click=handle_play),\n                ft.ElevatedButton(\"Pause\", on_click=handle_pause),\n                ft.ElevatedButton(\"Play Or Pause\", on_click=handle_play_or_pause),\n                ft.ElevatedButton(\"Stop\", on_click=handle_stop),\n                ft.ElevatedButton(\"Next\", on_click=handle_next),\n                ft.ElevatedButton(\"Previous\", on_click=handle_previous),\n                ft.ElevatedButton(\"Seek s=10\", on_click=handle_seek),\n                ft.ElevatedButton(\"Jump to first Media\", on_click=handle_jump),\n                ft.ElevatedButton(\"Add Random Media\", on_click=handle_add_media),\n                ft.ElevatedButton(\"Remove Random Media\", on_click=handle_remove_media),\n            ],\n        ),\n        ft.Slider(\n            min=0,\n            value=100,\n            max=100,\n            label=\"Volume = {value}%\",\n            divisions=10,\n            width=400,\n            on_change=handle_volume_change,\n        ),\n        ft.Slider(\n            min=1,\n            value=1,\n            max=3,\n            label=\"PlaybackRate = {value}X\",\n            divisions=6,\n            width=400,\n            on_change=handle_playback_rate_change,\n        ),\n    )\n\n\nft.app(main)\n</code></pre>"},{"location":"video/#flet_video.video.Video","title":"Video","text":"<p>               Bases: <code>ConstrainedControl</code></p> <p>A control that displays a video from a playlist.</p> RAISES DESCRIPTION <code>AssertionError</code> <p>If the <code>volume</code> is not between <code>0.0</code> and <code>100.0</code> (inclusive).</p>"},{"location":"video/#flet_video.video.Video.align","title":"align","text":"<pre><code>align: Alignment | None = None\n</code></pre> <p>Alignment of the control within its parent.</p>"},{"location":"video/#flet_video.video.Video.alignment","title":"alignment","text":"<pre><code>alignment: Alignment = field(default_factory=lambda: CENTER)\n</code></pre> <p>Defines the Alignment of the viewport.</p>"},{"location":"video/#flet_video.video.Video.animate_align","title":"animate_align","text":"<pre><code>animate_align: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>align</code> property.</p> <p>More information here.</p>"},{"location":"video/#flet_video.video.Video.animate_margin","title":"animate_margin","text":"<pre><code>animate_margin: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>margin</code> property.</p> <p>More information here.</p>"},{"location":"video/#flet_video.video.Video.animate_offset","title":"animate_offset","text":"<pre><code>animate_offset: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>offset</code> property.</p> <p>More information here.</p>"},{"location":"video/#flet_video.video.Video.animate_opacity","title":"animate_opacity","text":"<pre><code>animate_opacity: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>opacity</code> property.</p> <p>More information here.</p>"},{"location":"video/#flet_video.video.Video.animate_position","title":"animate_position","text":"<pre><code>animate_position: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the positioning properties (<code>left</code>, <code>right</code>, <code>top</code> and <code>bottom</code>).</p> <p>More information here.</p>"},{"location":"video/#flet_video.video.Video.animate_rotation","title":"animate_rotation","text":"<pre><code>animate_rotation: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>rotate</code> property.</p> <p>More information here.</p>"},{"location":"video/#flet_video.video.Video.animate_scale","title":"animate_scale","text":"<pre><code>animate_scale: AnimationValue | None = None\n</code></pre> <p>Enables implicit animation of the <code>scale</code> property.</p> <p>More information here.</p>"},{"location":"video/#flet_video.video.Video.animate_size","title":"animate_size","text":"<pre><code>animate_size: AnimationValue | None = None\n</code></pre> <p>TBD</p>"},{"location":"video/#flet_video.video.Video.aspect_ratio","title":"aspect_ratio","text":"<pre><code>aspect_ratio: Number | None = None\n</code></pre> <p>TBD</p>"},{"location":"video/#flet_video.video.Video.autoplay","title":"autoplay","text":"<pre><code>autoplay: bool = False\n</code></pre> <p>Whether the video should start playing automatically.</p>"},{"location":"video/#flet_video.video.Video.badge","title":"badge","text":"<pre><code>badge: BadgeValue | None = None\n</code></pre> <p>A badge to show on top of this control.</p>"},{"location":"video/#flet_video.video.Video.bottom","title":"bottom","text":"<pre><code>bottom: Number | None = None\n</code></pre> <p>The distance that the child's bottom edge is inset from the bottom of the stack.</p> Note <p>Effective only if this control is a descendant of one of the following: <code>Stack</code> control, <code>Page.overlay</code> list.</p>"},{"location":"video/#flet_video.video.Video.col","title":"col","text":"<pre><code>col: ResponsiveNumber = 12\n</code></pre> <p>If a parent of this control is a <code>ResponsiveRow</code>,  this property is used to determine how many virtual columns of a screen this control will span.</p> <p>Can be a number or a dictionary configured to have a different value for specific breakpoints, for example <code>col={\"sm\": 6}</code>.</p> <p>This control spans the 12 virtual columns by default.</p> <p>/// details | Dimensions     type: info | Breakpoint | Dimension | |---|---| | xs | &lt;576px | | sm | \u2265576px | | md | \u2265768px | | lg | \u2265992px | | xl | \u22651200px | | xxl | \u22651400px | ///</p>"},{"location":"video/#flet_video.video.Video.configuration","title":"configuration","text":"<pre><code>configuration: VideoConfiguration = field(\n    default_factory=lambda: VideoConfiguration()\n)\n</code></pre> <p>Additional configuration for the video player.</p>"},{"location":"video/#flet_video.video.Video.data","title":"data","text":"<pre><code>data: Any = skip_field()\n</code></pre> <p>Arbitrary data of any type.</p>"},{"location":"video/#flet_video.video.Video.disabled","title":"disabled","text":"<pre><code>disabled: bool = False\n</code></pre> <p>Every control has <code>disabled</code> property which is <code>False</code> by default - control and all its children are enabled.</p> Note <p>The value of this property will be propagated down to all children controls recursively.</p> <p>/// details | Example     type: example For example, if you have a form with multiple entry controls you can disable them all together by disabling container:</p> <p></p><pre><code>ft.Column(\n    disabled = True,\n    controls=[\n        ft.TextField(),\n        ft.TextField()\n    ]\n)\n</code></pre> ///<p></p>"},{"location":"video/#flet_video.video.Video.expand","title":"expand","text":"<pre><code>expand: bool | int | None = None\n</code></pre> <p>Specifies whether/how this control should expand to fill available space in its parent layout.</p> <p>More information here.</p> Note <p>Has effect only if the direct parent of this control is one of the following controls, or their subclasses: <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</p>"},{"location":"video/#flet_video.video.Video.expand_loose","title":"expand_loose","text":"<pre><code>expand_loose: bool = False\n</code></pre> <p>Allows the control to expand along the main axis if space is available, but does not require it to fill all available space.</p> <p>More information here.</p> Note <p>If <code>expand_loose</code> is <code>True</code>, it will have effect only if:</p> <ul> <li><code>expand</code> is not <code>None</code> and</li> <li>the direct parent of this control is one of the following controls, or their subclasses:     <code>Column</code>, <code>Row</code>, <code>View</code>, <code>Page</code>.</li> </ul>"},{"location":"video/#flet_video.video.Video.fill_color","title":"fill_color","text":"<pre><code>fill_color: ColorValue = BLACK\n</code></pre> <p>Defines the color used to fill the video background.</p>"},{"location":"video/#flet_video.video.Video.filter_quality","title":"filter_quality","text":"<pre><code>filter_quality: FilterQuality = LOW\n</code></pre> <p>Filter quality of the texture used to render the video output.</p> Note <p>Android was reported to show blurry images when using <code>FilterQuality.HIGH</code>. Prefer the usage of <code>FilterQuality.MEDIUM</code> on this platform.</p>"},{"location":"video/#flet_video.video.Video.fit","title":"fit","text":"<pre><code>fit: BoxFit = CONTAIN\n</code></pre> <p>The box fit to use for the video.</p>"},{"location":"video/#flet_video.video.Video.height","title":"height","text":"<pre><code>height: Number | None = None\n</code></pre> <p>Imposed Control height in virtual pixels.</p>"},{"location":"video/#flet_video.video.Video.key","title":"key","text":"<pre><code>key: KeyValue | None = None\n</code></pre>"},{"location":"video/#flet_video.video.Video.left","title":"left","text":"<pre><code>left: Number | None = None\n</code></pre> <p>The distance that the child's left edge is inset from the left of the stack.</p> Note <p>Effective only if this control is a descendant of one of the following: <code>Stack</code> control, <code>Page.overlay</code> list.</p>"},{"location":"video/#flet_video.video.Video.margin","title":"margin","text":"<pre><code>margin: MarginValue | None = None\n</code></pre> <p>Sets the margin of the control.</p>"},{"location":"video/#flet_video.video.Video.muted","title":"muted","text":"<pre><code>muted: bool = False\n</code></pre> <p>Defines whether the video player should be started in muted state.</p>"},{"location":"video/#flet_video.video.Video.offset","title":"offset","text":"<pre><code>offset: OffsetValue | None = None\n</code></pre> <p>Applies a translation transformation before painting the control.</p> <p>The translation is expressed as an <code>Offset</code> scaled to the control's size. So, <code>Offset(x=0.25, y=0)</code>, for example, will result in a horizontal translation of one quarter the width of this control.</p> <p>/// details | Example     type: example The following example displays container at <code>0, 0</code> top left corner of a stack as transform applies <code>-1 * 100, -1 * 100</code> (<code>offset * control's size</code>) horizontal and vertical translations to the control:</p> <p></p><pre><code>import flet as ft\n\ndef main(page: ft.Page):\n    page.add(\n        ft.Stack(\n            width=1000,\n            height=1000,\n            controls=[\n                ft.Container(\n                    bgcolor=\"red\",\n                    width=100,\n                    height=100,\n                    left=100,\n                    top=100,\n                    offset=ft.Offset(-1, -1),\n                )\n            ],\n        )\n    )\n\nft.run(main)\n</code></pre> ///<p></p>"},{"location":"video/#flet_video.video.Video.on_animation_end","title":"on_animation_end","text":"<pre><code>on_animation_end: (\n    ControlEventHandler[LayoutControl] | None\n) = None\n</code></pre> <p>Called when animation completes.</p> <p>Can be used to chain multiple animations.</p> <p>The <code>data</code> property of the event handler argument contains the name of the animation.</p> <p>More information here.</p>"},{"location":"video/#flet_video.video.Video.on_complete","title":"on_complete","text":"<pre><code>on_complete: ControlEventHandler[Video] | None = None\n</code></pre> <p>Fires when a video player completes.</p>"},{"location":"video/#flet_video.video.Video.on_enter_fullscreen","title":"on_enter_fullscreen","text":"<pre><code>on_enter_fullscreen: ControlEventHandler[Video] | None = (\n    None\n)\n</code></pre> <p>Fires when the video player enters fullscreen.</p>"},{"location":"video/#flet_video.video.Video.on_error","title":"on_error","text":"<pre><code>on_error: ControlEventHandler[Video] | None = None\n</code></pre> <p>Fires when an error occurs.</p> <p>Event handler argument's <code>data</code> property contains information about the error.</p>"},{"location":"video/#flet_video.video.Video.on_exit_fullscreen","title":"on_exit_fullscreen","text":"<pre><code>on_exit_fullscreen: ControlEventHandler[Video] | None = None\n</code></pre> <p>Fires when the video player exits fullscreen</p>"},{"location":"video/#flet_video.video.Video.on_load","title":"on_load","text":"<pre><code>on_load: ControlEventHandler[Video] | None = None\n</code></pre> <p>Fires when the video player is initialized and ready for playback.</p>"},{"location":"video/#flet_video.video.Video.on_track_change","title":"on_track_change","text":"<pre><code>on_track_change: ControlEventHandler[Video] | None = None\n</code></pre> <p>Fires when a video track changes.</p> <p>Event handler argument's <code>data</code> property contains the index of the new track.</p>"},{"location":"video/#flet_video.video.Video.opacity","title":"opacity","text":"<pre><code>opacity: Number = 1.0\n</code></pre> <p>Defines the transparency of the control.</p> <p>Value ranges from <code>0.0</code> (completely transparent) to <code>1.0</code> (completely opaque without any transparency).</p>"},{"location":"video/#flet_video.video.Video.page","title":"page","text":"<pre><code>page: Page | BasePage | None\n</code></pre> <p>The page to which this control belongs to.</p>"},{"location":"video/#flet_video.video.Video.parent","title":"parent","text":"<pre><code>parent: BaseControl | None\n</code></pre> <p>The direct ancestor(parent) of this control.</p> <p>It defaults to <code>None</code> and will only have a value when this control is mounted (added to the page tree).</p> <p>The <code>Page</code> control (which is the root of the tree) is an exception - it always has <code>parent=None</code>.</p>"},{"location":"video/#flet_video.video.Video.pause_upon_entering_background_mode","title":"pause_upon_entering_background_mode","text":"<pre><code>pause_upon_entering_background_mode: bool = True\n</code></pre> <p>Whether to pause the video when application enters background mode.</p>"},{"location":"video/#flet_video.video.Video.pitch","title":"pitch","text":"<pre><code>pitch: Number = 1.0\n</code></pre> <p>Defines the relative pitch of the video player.</p>"},{"location":"video/#flet_video.video.Video.playback_rate","title":"playback_rate","text":"<pre><code>playback_rate: Number = 1.0\n</code></pre> <p>Defines the playback rate of the video player.</p>"},{"location":"video/#flet_video.video.Video.playlist","title":"playlist","text":"<pre><code>playlist: list[VideoMedia] = field(default_factory=list)\n</code></pre> <p>A list of <code>VideoMedia</code>s representing the video files to be played.</p>"},{"location":"video/#flet_video.video.Video.playlist_mode","title":"playlist_mode","text":"<pre><code>playlist_mode: PlaylistMode | None = None\n</code></pre> <p>Represents the mode of playback for the playlist.</p>"},{"location":"video/#flet_video.video.Video.resume_upon_entering_foreground_mode","title":"resume_upon_entering_foreground_mode","text":"<pre><code>resume_upon_entering_foreground_mode: bool = False\n</code></pre> <p>Whether to resume the video when application enters foreground mode. Has effect only if <code>pause_upon_entering_background_mode</code> is also set to <code>True</code>.</p>"},{"location":"video/#flet_video.video.Video.right","title":"right","text":"<pre><code>right: Number | None = None\n</code></pre> <p>The distance that the child's right edge is inset from the right of the stack.</p> Note <p>Effective only if this control is a descendant of one of the following: <code>Stack</code> control, <code>Page.overlay</code> list.</p>"},{"location":"video/#flet_video.video.Video.rotate","title":"rotate","text":"<pre><code>rotate: RotateValue | None = None\n</code></pre> <p>Transforms this control using a rotation around its center.</p> <p>The value of <code>rotate</code> property could be one of the following types:</p> <ul> <li><code>number</code> - a rotation in clockwise radians. Full circle <code>360\u00b0</code> is <code>math.pi * 2</code> radians, <code>90\u00b0</code> is <code>pi / 2</code>, <code>45\u00b0</code> is <code>pi / 4</code>, etc.</li> <li><code>Rotate</code> - allows to specify rotation <code>angle</code> as well as <code>alignment</code> - the location of rotation center.</li> </ul> <p>/// details | Example     type: example For example: </p><pre><code>ft.Image(\n    src=\"https://picsum.photos/100/100\",\n    width=100,\n    height=100,\n    border_radius=5,\n    rotate=Rotate(angle=0.25 * pi, alignment=ft.Alignment.CENTER_LEFT)\n)\n</code></pre> ///<p></p>"},{"location":"video/#flet_video.video.Video.rtl","title":"rtl","text":"<pre><code>rtl: bool = False\n</code></pre> <p>Whether the text direction of the control should be right-to-left (RTL).</p>"},{"location":"video/#flet_video.video.Video.scale","title":"scale","text":"<pre><code>scale: ScaleValue | None = None\n</code></pre> <p>Scales this control along the 2D plane. Default scale factor is <code>1.0</code>, meaning no-scale.</p> <p>Setting this property to <code>0.5</code>, for example, makes this control twice smaller, while <code>2.0</code> makes it twice larger.</p> <p>Different scale multipliers can be specified for <code>x</code> and <code>y</code> axis, by setting <code>Control.scale</code> property to an instance of <code>Scale</code> class. Either <code>scale</code> or <code>scale_x</code> and <code>scale_y</code> could be specified, but not all of them.</p> <p>/// details | Example     type: example </p><pre><code>ft.Image(\n    src=\"https://picsum.photos/100/100\",\n    width=100,\n    height=100,\n    border_radius=5,\n    scale=ft.Scale(scale_x=2, scale_y=0.5)\n)\n</code></pre> ///<p></p>"},{"location":"video/#flet_video.video.Video.show_controls","title":"show_controls","text":"<pre><code>show_controls: bool = True\n</code></pre> <p>Whether to show the video player controls.</p>"},{"location":"video/#flet_video.video.Video.shuffle_playlist","title":"shuffle_playlist","text":"<pre><code>shuffle_playlist: bool = False\n</code></pre> <p>Defines whether the playlist should be shuffled.</p>"},{"location":"video/#flet_video.video.Video.subtitle_configuration","title":"subtitle_configuration","text":"<pre><code>subtitle_configuration: VideoSubtitleConfiguration = field(\n    default_factory=lambda: VideoSubtitleConfiguration()\n)\n</code></pre> <p>Defines the subtitle configuration for the video player.</p>"},{"location":"video/#flet_video.video.Video.subtitle_track","title":"subtitle_track","text":"<pre><code>subtitle_track: VideoSubtitleTrack | None = None\n</code></pre> <p>Defines the subtitle track for the video player.</p>"},{"location":"video/#flet_video.video.Video.title","title":"title","text":"<pre><code>title: str = 'flet-video'\n</code></pre> <p>Defines the name of the underlying window &amp; process for native backend. This is visible inside the windows' volume mixer.</p>"},{"location":"video/#flet_video.video.Video.tooltip","title":"tooltip","text":"<pre><code>tooltip: TooltipValue | None = None\n</code></pre> <p>The tooltip ot show when this control is hovered over.</p>"},{"location":"video/#flet_video.video.Video.top","title":"top","text":"<pre><code>top: Number | None = None\n</code></pre> <p>The distance that the child's top edge is inset from the top of the stack.</p> Note <p>Effective only if this control is a descendant of one of the following: <code>Stack</code> control, <code>Page.overlay</code> list.</p>"},{"location":"video/#flet_video.video.Video.visible","title":"visible","text":"<pre><code>visible: bool = True\n</code></pre> <p>Every control has <code>visible</code> property which is <code>True</code> by default - control is rendered on the page. Setting <code>visible</code> to <code>False</code> completely prevents control (and all its children if any) from rendering on a page canvas. Hidden controls cannot be focused or selected with a keyboard or mouse and they do not emit any events.</p>"},{"location":"video/#flet_video.video.Video.volume","title":"volume","text":"<pre><code>volume: Number = 100.0\n</code></pre> <p>Defines the volume of the video player.</p> Note <p>It's value ranges between <code>0.0</code> to <code>100.0</code> (inclusive), where <code>0.0</code> is muted and <code>100.0</code> is the maximum volume. An exception will be raised if the value is outside this range.</p>"},{"location":"video/#flet_video.video.Video.wakelock","title":"wakelock","text":"<pre><code>wakelock: bool = True\n</code></pre> <p>Whether to acquire wake lock while playing the video. When <code>True</code>, device's display will not go to standby/sleep while the video is playing.</p>"},{"location":"video/#flet_video.video.Video.width","title":"width","text":"<pre><code>width: Number | None = None\n</code></pre> <p>Imposed Control width in virtual pixels.</p>"},{"location":"video/#flet_video.video.Video.before_event","title":"before_event","text":"<pre><code>before_event(e: ControlEvent)\n</code></pre>"},{"location":"video/#flet_video.video.Video.before_update","title":"before_update","text":"<pre><code>before_update()\n</code></pre>"},{"location":"video/#flet_video.video.Video.build","title":"build","text":"<pre><code>build()\n</code></pre> <p>Called once during control initialization to define its child controls. self.page is available in this method.</p>"},{"location":"video/#flet_video.video.Video.clean","title":"clean","text":"<pre><code>clean() -&gt; None\n</code></pre>"},{"location":"video/#flet_video.video.Video.did_mount","title":"did_mount","text":"<pre><code>did_mount()\n</code></pre>"},{"location":"video/#flet_video.video.Video.get_current_position","title":"get_current_position","text":"<pre><code>get_current_position() -&gt; Duration\n</code></pre> RETURNS DESCRIPTION <code>Duration</code> <p>The current position of the currently playing media.</p>"},{"location":"video/#flet_video.video.Video.get_duration","title":"get_duration","text":"<pre><code>get_duration() -&gt; Duration\n</code></pre> RETURNS DESCRIPTION <code>Duration</code> <p>The duration of the currently playing media.</p>"},{"location":"video/#flet_video.video.Video.init","title":"init","text":"<pre><code>init()\n</code></pre>"},{"location":"video/#flet_video.video.Video.is_completed","title":"is_completed","text":"<pre><code>is_completed() -&gt; bool\n</code></pre> RETURNS DESCRIPTION <code>bool</code> <p><code>True</code> if video player has reached the end of the currently playing media, <code>False</code> otherwise.</p>"},{"location":"video/#flet_video.video.Video.is_isolated","title":"is_isolated","text":"<pre><code>is_isolated()\n</code></pre>"},{"location":"video/#flet_video.video.Video.is_playing","title":"is_playing","text":"<pre><code>is_playing() -&gt; bool\n</code></pre> RETURNS DESCRIPTION <code>bool</code> <p><code>True</code> if the video player is currently playing, <code>False</code> otherwise.</p>"},{"location":"video/#flet_video.video.Video.jump_to","title":"jump_to","text":"<pre><code>jump_to(media_index: int)\n</code></pre> <p>Jumps to the <code>VideoMedia</code> at the specified <code>media_index</code> in the <code>playlist</code>.</p>"},{"location":"video/#flet_video.video.Video.next","title":"next","text":"<pre><code>next()\n</code></pre> <p>Jumps to the next <code>VideoMedia</code> in the <code>playlist</code>.</p>"},{"location":"video/#flet_video.video.Video.pause","title":"pause","text":"<pre><code>pause()\n</code></pre> <p>Pauses the video player.</p>"},{"location":"video/#flet_video.video.Video.play","title":"play","text":"<pre><code>play()\n</code></pre> <p>Starts playing the video.</p>"},{"location":"video/#flet_video.video.Video.play_or_pause","title":"play_or_pause","text":"<pre><code>play_or_pause()\n</code></pre> <p>Cycles between play and pause states of the video player, i.e., plays if paused and pauses if playing.</p>"},{"location":"video/#flet_video.video.Video.playlist_add","title":"playlist_add","text":"<pre><code>playlist_add(media: VideoMedia)\n</code></pre> <p>Appends/Adds the provided <code>media</code> to the <code>playlist</code>.</p>"},{"location":"video/#flet_video.video.Video.playlist_remove","title":"playlist_remove","text":"<pre><code>playlist_remove(media_index: int)\n</code></pre> <p>Removes the provided <code>media</code> from the <code>playlist</code>.</p>"},{"location":"video/#flet_video.video.Video.previous","title":"previous","text":"<pre><code>previous()\n</code></pre> <p>Jumps to the previous <code>VideoMedia</code> in the <code>playlist</code>.</p>"},{"location":"video/#flet_video.video.Video.seek","title":"seek","text":"<pre><code>seek(position: DurationValue)\n</code></pre> <p>Seeks the currently playing <code>VideoMedia</code> from the <code>playlist</code> at the specified <code>position</code>.</p>"},{"location":"video/#flet_video.video.Video.stop","title":"stop","text":"<pre><code>stop()\n</code></pre> <p>Stops the video player.</p>"},{"location":"video/#flet_video.video.Video.update","title":"update","text":"<pre><code>update() -&gt; None\n</code></pre>"},{"location":"video/#flet_video.video.Video.will_unmount","title":"will_unmount","text":"<pre><code>will_unmount()\n</code></pre>"},{"location":"types/playlist_mode/","title":"PlaylistMode","text":""},{"location":"types/playlist_mode/#flet_video.types.PlaylistMode","title":"<code>PlaylistMode</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Defines the playback mode for the video playlist.</p>"},{"location":"types/playlist_mode/#flet_video.types.PlaylistMode.LOOP","title":"<code>LOOP = 'loop'</code>","text":"<p>Loop over the playlist &amp; restart it from beginning once end is reached.</p>"},{"location":"types/playlist_mode/#flet_video.types.PlaylistMode.NONE","title":"<code>NONE = 'none'</code>","text":"<p>End playback once end of the playlist is reached.</p>"},{"location":"types/playlist_mode/#flet_video.types.PlaylistMode.SINGLE","title":"<code>SINGLE = 'single'</code>","text":"<p>Indefinitely loop over the currently playing file in the playlist.</p>"},{"location":"types/video_configuration/","title":"VideoConfiguration","text":""},{"location":"types/video_configuration/#flet_video.types.VideoConfiguration","title":"VideoConfiguration","text":"<p>Additional configuration for video playback.</p>"},{"location":"types/video_configuration/#flet_video.types.VideoConfiguration.enable_hardware_acceleration","title":"enable_hardware_acceleration","text":"<pre><code>enable_hardware_acceleration: bool = True\n</code></pre> <p>Whether to enable hardware acceleration. When disabled, may cause battery drain, device heating, and high CPU usage.</p>"},{"location":"types/video_configuration/#flet_video.types.VideoConfiguration.hardware_decoding_api","title":"hardware_decoding_api","text":"<pre><code>hardware_decoding_api: str | None = None\n</code></pre> <p>Sets the --hwdec property on native backend.</p> The default value is platform dependent <ul> <li>Windows, GNU/Linux, macOS &amp; iOS : <code>\"auto\"</code></li> <li>Android: <code>\"auto-safe\"</code></li> </ul>"},{"location":"types/video_configuration/#flet_video.types.VideoConfiguration.height","title":"height","text":"<pre><code>height: Number | None = None\n</code></pre> <p>The fixed height for the video output.</p>"},{"location":"types/video_configuration/#flet_video.types.VideoConfiguration.output_driver","title":"output_driver","text":"<pre><code>output_driver: str | None = None\n</code></pre> <p>Sets the --vo property on native backend.</p> The default value is platform dependent <ul> <li>Windows, GNU/Linux, macOS &amp; iOS : <code>\"libmpv\"</code></li> <li>Android: <code>\"gpu\"</code></li> </ul>"},{"location":"types/video_configuration/#flet_video.types.VideoConfiguration.scale","title":"scale","text":"<pre><code>scale: Number = 1.0\n</code></pre> <p>The scale for the video output. Specifying this option will cause <code>width</code> &amp; <code>height</code> to be ignored.</p>"},{"location":"types/video_configuration/#flet_video.types.VideoConfiguration.width","title":"width","text":"<pre><code>width: Number | None = None\n</code></pre> <p>The fixed width for the video output.</p>"},{"location":"types/video_media/","title":"VideoMedia","text":""},{"location":"types/video_media/#flet_video.types.VideoMedia","title":"VideoMedia","text":"<p>Represents a media resource for video playback.</p>"},{"location":"types/video_media/#flet_video.types.VideoMedia.extras","title":"extras","text":"<pre><code>extras: dict[str, str] | None = None\n</code></pre> <p>Additional metadata for the media resource.</p>"},{"location":"types/video_media/#flet_video.types.VideoMedia.http_headers","title":"http_headers","text":"<pre><code>http_headers: dict[str, str] | None = None\n</code></pre> <p>HTTP headers to be used for the media resource.</p>"},{"location":"types/video_media/#flet_video.types.VideoMedia.resource","title":"resource","text":"<pre><code>resource: str\n</code></pre> <p>URI of the media resource.</p>"},{"location":"types/video_subtitle_configuration/","title":"VideoSubtitleConfiguration","text":""},{"location":"types/video_subtitle_configuration/#flet_video.types.VideoSubtitleConfiguration","title":"VideoSubtitleConfiguration","text":"<p>Represents the configuration for video subtitles.</p>"},{"location":"types/video_subtitle_configuration/#flet_video.types.VideoSubtitleConfiguration.padding","title":"padding","text":"<pre><code>padding: PaddingValue = field(\n    default_factory=lambda: Padding(\n        left=16.0, top=0.0, right=16.0, bottom=24.0\n    )\n)\n</code></pre> <p>The padding to be used for the subtitles.</p>"},{"location":"types/video_subtitle_configuration/#flet_video.types.VideoSubtitleConfiguration.text_align","title":"text_align","text":"<pre><code>text_align: TextAlign = CENTER\n</code></pre> <p>The text alignment to be used for the subtitles.</p>"},{"location":"types/video_subtitle_configuration/#flet_video.types.VideoSubtitleConfiguration.text_scale_factor","title":"text_scale_factor","text":"<pre><code>text_scale_factor: Number = 1.0\n</code></pre> <p>Defines the scale factor for the subtitle text.</p>"},{"location":"types/video_subtitle_configuration/#flet_video.types.VideoSubtitleConfiguration.text_style","title":"text_style","text":"<pre><code>text_style: TextStyle = field(\n    default_factory=lambda: TextStyle(\n        height=1.4,\n        size=32.0,\n        letter_spacing=0.0,\n        word_spacing=0.0,\n        color=WHITE,\n        weight=NORMAL,\n        bgcolor=BLACK54,\n    )\n)\n</code></pre> <p>The text style to be used for the subtitles.</p>"},{"location":"types/video_subtitle_configuration/#flet_video.types.VideoSubtitleConfiguration.visible","title":"visible","text":"<pre><code>visible: bool = True\n</code></pre> <p>Whether the subtitles should be visible or not.</p>"},{"location":"types/video_subtitle_track/","title":"VideoSubtitleTrack","text":""},{"location":"types/video_subtitle_track/#flet_video.types.VideoSubtitleTrack","title":"VideoSubtitleTrack","text":"<p>Represents a subtitle track for a video.</p>"},{"location":"types/video_subtitle_track/#flet_video.types.VideoSubtitleTrack.album_art","title":"album_art","text":"<pre><code>album_art: bool | None = None\n</code></pre>"},{"location":"types/video_subtitle_track/#flet_video.types.VideoSubtitleTrack.audio_channels","title":"audio_channels","text":"<pre><code>audio_channels: int | None = None\n</code></pre>"},{"location":"types/video_subtitle_track/#flet_video.types.VideoSubtitleTrack.bitrate","title":"bitrate","text":"<pre><code>bitrate: int | None = None\n</code></pre>"},{"location":"types/video_subtitle_track/#flet_video.types.VideoSubtitleTrack.channels","title":"channels","text":"<pre><code>channels: str | None = None\n</code></pre>"},{"location":"types/video_subtitle_track/#flet_video.types.VideoSubtitleTrack.channels_count","title":"channels_count","text":"<pre><code>channels_count: int | None = None\n</code></pre>"},{"location":"types/video_subtitle_track/#flet_video.types.VideoSubtitleTrack.codec","title":"codec","text":"<pre><code>codec: str | None = None\n</code></pre>"},{"location":"types/video_subtitle_track/#flet_video.types.VideoSubtitleTrack.decoder","title":"decoder","text":"<pre><code>decoder: str | None = None\n</code></pre>"},{"location":"types/video_subtitle_track/#flet_video.types.VideoSubtitleTrack.fps","title":"fps","text":"<pre><code>fps: Number | None = None\n</code></pre>"},{"location":"types/video_subtitle_track/#flet_video.types.VideoSubtitleTrack.language","title":"language","text":"<pre><code>language: str | None = None\n</code></pre> <p>The language of the subtitle track, e.g. 'en'.</p>"},{"location":"types/video_subtitle_track/#flet_video.types.VideoSubtitleTrack.par","title":"par","text":"<pre><code>par: Number | None = None\n</code></pre>"},{"location":"types/video_subtitle_track/#flet_video.types.VideoSubtitleTrack.rotate","title":"rotate","text":"<pre><code>rotate: int | None = None\n</code></pre>"},{"location":"types/video_subtitle_track/#flet_video.types.VideoSubtitleTrack.sample_rate","title":"sample_rate","text":"<pre><code>sample_rate: int | None = None\n</code></pre>"},{"location":"types/video_subtitle_track/#flet_video.types.VideoSubtitleTrack.src","title":"src","text":"<pre><code>src: str\n</code></pre> <p>The subtitle source.</p> Supported values <ul> <li>A URL (e.g. \"https://example.com/subs.srt\" or \"www.example.com/sub.vtt\")</li> <li>An absolute local file path (not supported on the web platform)</li> <li>A raw subtitle text string (e.g. the full contents of an SRT/VTT file)</li> </ul>"},{"location":"types/video_subtitle_track/#flet_video.types.VideoSubtitleTrack.title","title":"title","text":"<pre><code>title: str | None = None\n</code></pre> <p>The title of the subtitle track, e.g. 'English'.</p>"},{"location":"types/video_subtitle_track/#flet_video.types.VideoSubtitleTrack.auto","title":"auto","text":"<pre><code>auto() -&gt; VideoSubtitleTrack\n</code></pre> <p>Default subtitle track. Selects the first subtitle track.</p>"},{"location":"types/video_subtitle_track/#flet_video.types.VideoSubtitleTrack.none","title":"none","text":"<pre><code>none() -&gt; VideoSubtitleTrack\n</code></pre> <p>No subtitle track. Disables subtitle output.</p>"}]}